{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMh3K/bTYyjVnPIo2c0j7dZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":160,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7KhpRWySKgfG","executionInfo":{"status":"ok","timestamp":1698742196773,"user_tz":-180,"elapsed":18872,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}},"outputId":"380a5efa-a965-403a-b0f5-a59dad57ad11"},"outputs":[{"name":"stdout","output_type":"stream","text":["Enter your mail: zavialov.ad@phystech.edu\n"]},{"output_type":"execute_result","data":{"text/plain":["{'mail': 'zavialov.ad@phystech.edu',\n"," 'id': 3491547985,\n"," 'type': 'regression',\n"," 'dataset': {'name': 'Servo Data Set',\n","  'url': 'https://archive.ics.uci.edu/ml/datasets/Servo'},\n"," 'method': ['Надарая-Ватсона', 'Линейная регрессия', 'Перцептрон']}"]},"metadata":{},"execution_count":160}],"source":["\n","from zlib import crc32\n","import numpy as np\n","\n","types = ['regression', 'classification']\n","datasets = {'regression': [{'name': 'Servo Data Set',\n","                            'url': 'https://archive.ics.uci.edu/ml/datasets/Servo'},\n","                           {'name': 'Forest Fires Data Set',\n","                            'url': 'https://archive.ics.uci.edu/ml/datasets/Forest+Fires'},\n","                           {'name': 'Boston Housing Data Set',\n","                            'url': 'https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_boston.html#sklearn.datasets.load_boston'},\n","                           {'name': 'Diabetes Data Set',\n","                            'url': 'https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_diabetes.html#sklearn.datasets.load_diabetes'}],\n","            'classification': [{'name': 'Spambase Data Set',\n","                                'url': 'https://archive.ics.uci.edu/ml/datasets/Spambase'},\n","                               {'name': 'Wine Data Set',\n","                                'url': 'https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_wine.html#sklearn.datasets.load_wine'},\n","                               {'name': 'Breast Cancer Data Set',\n","                                'url': 'https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_breast_cancer.html#sklearn.datasets.load_breast_cancer'},\n","                               {'name': 'MNIST',\n","                                'url': 'http://yann.lecun.com/exdb/mnist/'}]}\n","methods = {'regression': ['Линейная регрессия',\n","                          'Перцептрон',\n","                          'Надарая-Ватсона',\n","                          'SVR'],\n","           'classification': ['Логистическая регрессия',\n","                              'Перцептрон',\n","                              'k-ближайших соседей',\n","                              'Метод потенциальных функций',\n","                              'Метод Парзеновского окна',\n","                              'SVM']}\n","task = dict()\n","task['mail'] = input(prompt='Enter your mail: ')\n","task['id'] = crc32(task['mail'].encode('utf-8'))\n","np.random.seed(task['id'])\n","task['type'] = np.random.choice(types)\n","task['dataset'] = np.random.choice(datasets[task['type']])\n","task['method'] = np.random.choice(\n","    methods[task['type']], size=3, replace=False).tolist()\n","\n","\n","task"]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","from matplotlib import gridspec\n","import seaborn as sns\n","import pandas as pd\n","from tqdm.notebook import tqdm\n","\n","from scipy.special import softmax\n","from scipy.spatial.distance import cdist\n","import numpy as np\n","import torch\n","\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import accuracy_score\n","from sklearn.metrics import mean_squared_error\n","from sklearn.model_selection import KFold, ParameterGrid\n","from sklearn.datasets import make_classification\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn.linear_model import Perceptron\n","from sklearn.neural_network import MLPRegressor\n","from sklearn.svm import SVR\n","from mlxtend.plotting import plot_decision_regions"],"metadata":{"id":"YyoopLt7MvPc","executionInfo":{"status":"ok","timestamp":1698959115559,"user_tz":-180,"elapsed":13086,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["data = pd.read_csv('./servo.data')\n","#data.info()"],"metadata":{"id":"nCEzfgz_NnQD","executionInfo":{"status":"ok","timestamp":1698959118520,"user_tz":-180,"elapsed":324,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["new_feat = ['motor', 'screw', 'pgain', 'vgain', 'class']\n","i = 0\n","for feat in data:\n","  data = data.rename(columns= {feat : new_feat[i]})\n","  i+=1"],"metadata":{"id":"c_4cao4PkEE-","executionInfo":{"status":"ok","timestamp":1698959133216,"user_tz":-180,"elapsed":526,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["X = pd.get_dummies(X)"],"metadata":{"id":"4ArmdA9CPIG8","executionInfo":{"status":"ok","timestamp":1698959227531,"user_tz":-180,"elapsed":339,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.25, random_state = 42)"],"metadata":{"id":"fV9s-2lC0R8v","executionInfo":{"status":"ok","timestamp":1698959231220,"user_tz":-180,"elapsed":317,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["model2 = LinearRegression()\n","model2.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"GoLX8kMnqhuX","executionInfo":{"status":"ok","timestamp":1698959268027,"user_tz":-180,"elapsed":8,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}},"outputId":"f3e6fe12-834d-4d0e-9061-c43fd4cbc433"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["predicted2 = model2.predict(X_test)"],"metadata":{"id":"Dhtc5GbzWevm","executionInfo":{"status":"ok","timestamp":1698959270891,"user_tz":-180,"elapsed":335,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["mean_squared_error(y_test, predicted2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YPHys5DzWmy6","executionInfo":{"status":"ok","timestamp":1698959273029,"user_tz":-180,"elapsed":441,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}},"outputId":"6eeb5c21-783e-454f-f4ea-fbd1d15e141c"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7635188290193127"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["class FNV(object):\n","    def __init__(self, kernel=None):\n","        self.X, self.Y = None, None\n","        self.kernel = lambda x: np.ones_like(x)\n","        if kernel is not None:\n","            self.kernel = kernel\n","    def predict(self, X):\n","        features = np.sum(self.Y*self.kernel(cdist(X, self.X)), axis=-1)\n","        return features/(np.sum(self.kernel(cdist(X, self.X)), axis=-1)+1e-10)\n","    def fit(self, X, Y, epoch=10):\n","        self.X, self.Y = np.array(X), np.array(Y)"],"metadata":{"id":"unJ6P9Dd3OZ1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def K(distance, h=0.2):\n","    ret = np.array(distance)/h\n","    return (1 - ret**2) * (np.abs(ret) <= 1)"],"metadata":{"id":"TLveXaZ0EXLi","executionInfo":{"status":"ok","timestamp":1698742198110,"user_tz":-180,"elapsed":64,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}}},"execution_count":174,"outputs":[]},{"cell_type":"code","source":["model = FNV(kernel=lambda x: K(x, h=2))\n","model.fit(X_train, y_train)"],"metadata":{"id":"VbNaJAMpEVY2","executionInfo":{"status":"ok","timestamp":1698742198110,"user_tz":-180,"elapsed":63,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}}},"execution_count":175,"outputs":[]},{"cell_type":"code","source":["predicted = model.predict(X_test)"],"metadata":{"id":"QSAKoT0yJZ9x","executionInfo":{"status":"ok","timestamp":1698742198111,"user_tz":-180,"elapsed":63,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}}},"execution_count":176,"outputs":[]},{"cell_type":"code","source":["mean_squared_error(y_test, predicted)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CAIea9DtP3Ww","executionInfo":{"status":"ok","timestamp":1698742198112,"user_tz":-180,"elapsed":63,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}},"outputId":"c7b24002-e87e-4056-a0a0-4664c30b262f"},"execution_count":177,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.9367381961959855"]},"metadata":{},"execution_count":177}]},{"cell_type":"code","source":["model3 = MLPRegressor(random_state = 42,activation ='identity', learning_rate = 'adaptive', batch_size=32)"],"metadata":{"id":"CMdML2PJqoEG","executionInfo":{"status":"ok","timestamp":1698742198113,"user_tz":-180,"elapsed":57,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}}},"execution_count":178,"outputs":[]},{"cell_type":"code","source":["model3.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":92},"id":"XHKNRwXcuhsm","executionInfo":{"status":"ok","timestamp":1698742198113,"user_tz":-180,"elapsed":56,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}},"outputId":"a5a5ee07-8179-4339-d3d7-b4bb11bb4f47"},"execution_count":179,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MLPRegressor(activation='identity', batch_size=32, learning_rate='adaptive',\n","             random_state=42)"],"text/html":["<style>#sk-container-id-28 {color: black;background-color: white;}#sk-container-id-28 pre{padding: 0;}#sk-container-id-28 div.sk-toggleable {background-color: white;}#sk-container-id-28 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-28 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-28 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-28 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-28 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-28 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-28 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-28 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-28 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-28 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-28 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-28 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-28 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-28 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-28 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-28 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-28 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-28 div.sk-item {position: relative;z-index: 1;}#sk-container-id-28 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-28 div.sk-item::before, #sk-container-id-28 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-28 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-28 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-28 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-28 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-28 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-28 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-28 div.sk-label-container {text-align: center;}#sk-container-id-28 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-28 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-28\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MLPRegressor(activation=&#x27;identity&#x27;, batch_size=32, learning_rate=&#x27;adaptive&#x27;,\n","             random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-28\" type=\"checkbox\" checked><label for=\"sk-estimator-id-28\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MLPRegressor</label><div class=\"sk-toggleable__content\"><pre>MLPRegressor(activation=&#x27;identity&#x27;, batch_size=32, learning_rate=&#x27;adaptive&#x27;,\n","             random_state=42)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":179}]},{"cell_type":"code","source":["predicted3 = model3.predict(X_test)"],"metadata":{"id":"5Z2BVvyXaZeJ","executionInfo":{"status":"ok","timestamp":1698742198114,"user_tz":-180,"elapsed":53,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}}},"execution_count":180,"outputs":[]},{"cell_type":"code","source":["mean_squared_error(y_test, predicted3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FM4v7Kk0acyx","executionInfo":{"status":"ok","timestamp":1698742198114,"user_tz":-180,"elapsed":52,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}},"outputId":"248a80dc-ac31-448a-a664-588372232e77"},"execution_count":181,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7206874440219422"]},"metadata":{},"execution_count":181}]},{"cell_type":"code","source":["model4 = SVR(kernel='linear',C=10,epsilon = 0.75)\n","model4.fit(X_train, y_train)\n","predicted4 = model4.predict(X_test)\n","mean_squared_error(y_test, predicted4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0DZqGVw02OyK","executionInfo":{"status":"ok","timestamp":1698742198115,"user_tz":-180,"elapsed":46,"user":{"displayName":"Артем Завьялов","userId":"04918970167557415541"}},"outputId":"b72e65ae-090f-4fac-dbb6-cd290944984e"},"execution_count":182,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9273432784572139"]},"metadata":{},"execution_count":182}]},{"cell_type":"code","source":["plt.subplot(2,2, 1)\n","plt.plot(data['motor'].sort_values(),y, '.')\n","plt.subplot(2,2, 2)\n","plt.plot(data['screw'].sort_values(),y, '.')\n","plt.subplot(2,2, 3)\n","plt.plot(data['pgain'],y, '.')\n","plt.subplot(2,2, 4)\n","plt.plot(data['vgain'],y, '.')\n","plt.show()"],"metadata":{"id":"l9YgqTzJ29ek"},"execution_count":null,"outputs":[]}]}